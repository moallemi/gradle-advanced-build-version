
apply plugin: 'com.adarshr.test-logger'

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

testlogger {
    showSimpleNames true
}

ext.generatedResources = "$buildDir/generated/resources"

sourceSets {
    test.resources.srcDirs += generatedResources
}

task generateSdkResource() {
    inputs.property("compileSdkVersion", 29)
    inputs.property("buildToolsVersion", "29.0.2")
    inputs.property("minSdkVersion", 14)
    inputs.property("advancedBuildPluginVersion", project.version)
    outputs.dir(generatedResources)
    doLast {
        // Properties.write will have a timestamp, that invalidates the task,
        // so we don't use it and write a file manually
        new File("$generatedResources", "sdk.prop").withWriter('UTF-8') { writer ->
            writer.write("compileSdkVersion=29\n")
            writer.write("buildToolsVersion=29.0.2\n")
            writer.write("minSdkVersion=14\n")
            writer.write("advancedBuildPluginVersion=${project.version}\n")
        }
    }
}

tasks["compileTestJava"].dependsOn generateSdkResource